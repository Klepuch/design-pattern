class Memento:
    def __init__(self, state):
        self._state = state

    def get_state(self):
        return self._state

class Originator:
    def __init__(self, state):
        self._state = state

    def create_memento(self):
        return Memento(self._state)

    def restore_from_memento(self, memento):
        self._state = memento.get_state()

    def set_state(self, state):
        self._state = state

    def get_state(self):
        return self._state

class Caretaker:
    def __init__(self):
        self._mementos = []

    def add_memento(self, memento):
        self._mementos.append(memento)

    def get_memento(self, index):
        return self._mementos[index]

# Використання
originator = Originator("Стан 1")
caretaker = Caretaker()

# Зберегти стан
caretaker.add_memento(originator.create_memento())

originator.set_state("Стан 2")
print("Теперішній стан:", originator.get_state())  # Виведе: Стан 2

# Відновлення стану
originator.restore_from_memento(caretaker.get_memento(0))
print("Відновлений стан:", originator.get_state())  # Виведе: Стан 1
